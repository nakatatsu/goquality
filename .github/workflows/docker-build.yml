name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop
  schedule:
    # Nightly build at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      push:
        description: 'Push image to registry'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  # GitHub Container Registry settings
  GHCR_REGISTRY: ghcr.io
  GHCR_IMAGE_NAME: nakatatsu/goquality
  # Docker Hub settings
  DOCKERHUB_REGISTRY: docker.io
  DOCKERHUB_IMAGE_NAME: tnakamura2025/goquality

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request' || github.event.inputs.push == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Log in to Docker Hub
        if: (github.event_name != 'pull_request' || github.event.inputs.push == 'true') && vars.DOCKERHUB_USERNAME != ''
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for GHCR
        id: meta-ghcr
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=1.24-{{date 'YYYYMMDD'}},enable={{is_default_branch}}
      
      - name: Extract metadata for Docker Hub
        id: meta-dockerhub
        if: vars.DOCKERHUB_USERNAME != ''
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
            type=raw,value=1.24-{{date 'YYYYMMDD'}},enable={{is_default_branch}}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' || github.event.inputs.push == 'true' }}
          tags: |
            ${{ steps.meta-ghcr.outputs.tags }}
            ${{ steps.meta-dockerhub.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          # platforms: linux/amd64,linux/arm64  # ARM build disabled due to build issues
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta-ghcr.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ fromJSON(steps.meta-ghcr.outputs.json).labels['org.opencontainers.image.version'] }}
      
      - name: Generate image report
        if: github.event_name != 'pull_request'
        run: |
          echo "## 🐳 Docker Images Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### GitHub Container Registry" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          if [ -n "${{ vars.DOCKERHUB_USERNAME }}" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Docker Hub" >> $GITHUB_STEP_SUMMARY
            echo "**Image:** ${{ env.DOCKERHUB_IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${{ env.DOCKERHUB_IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Run vulnerability scan
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image \
            --format table \
            --severity HIGH,CRITICAL \
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}:latest || true